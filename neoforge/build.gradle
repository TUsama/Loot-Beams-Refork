plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    //id 'net.neoforged.gradle.userdev' version '7.0.120'
    //id 'com.gradleup.shadow' version '9.0.0-beta4'
    id "me.modmuss50.mod-publish-plugin" version "0.8.1"

}
def namePattern = "${mod_name}-neoforge-${minecraft_version}"
/*
configurations {
    shade
    libraries
    implementation.extendsFrom(libraries, shade)
}*/

base {
    archivesName = namePattern
}


neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric

        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}
boolean enableApotheosis = true

dependencies {
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'


    implementation("me.fzzyhmstrs:fzzy_config:${fzzy_config_version}+neoforge")

    compileOnly "curse.maven:adorned-1036809:5740650"
    compileOnly "curse.maven:accessories-938917:5727153"
    compileOnly "curse.maven:curios-continuation-1037991:5747224"

    if (enableApotheosis){
        implementation "curse.maven:apotheosis-313970:6023693"
        implementation "curse.maven:placebo-283644:6446766"
        runtimeOnly "curse.maven:apothic-spawners-986583:6430294"
        runtimeOnly "curse.maven:apothic-enchanting-1063926:6514634"
        runtimeOnly "curse.maven:apothic-attributes-898963:6514649"
    } else{
        compileOnly "curse.maven:apotheosis-313970:6023693"
    }


    implementation "curse.maven:nirvana-library-1164411:6473162"

    compileOnly "curse.maven:tiered-forge-453889:6206636"
    compileOnly "curse.maven:unionlib-367806:5997453"

    compileOnly 'maven.modrinth:subtle-effects:TZo5xb5m'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

//https://gist.github.com/SizableShrimp/949e7c219bfc94487a45226b64ac7749
/*
shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    relocate 'net.neoforged.bus', "${project.group}.relocated.net.neoforged.bus"
    finalizedBy 'jar'
}*/
/*
tasks.named('shadowJar', ShadowJar) {
    archiveClassifier = ''
    configurations = [project.configurations.libraries]
    //relocate 'net.neoforged.bus', "${project.group}.relocated.net.neoforged.bus"
    minimize()
}*/

//assemble.dependsOn shadowJar


