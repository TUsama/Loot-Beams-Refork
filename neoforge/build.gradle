import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    //id 'net.neoforged.gradle.userdev' version '7.0.120'
    id 'com.gradleup.shadow' version '9.0.0-beta4'
    id "me.modmuss50.mod-publish-plugin" version "0.8.1"

}
def namePattern = "${mod_name}-neoforge-${minecraft_version}"

configurations {
    shade
    libraries
    implementation.extendsFrom(libraries, shade)
}

base {
    archivesName = namePattern
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric

        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}



dependencies {
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'


/*
    compileOnly fg.deobf("curse.maven:apotheosis-313970:5753183")
    compileOnly fg.deobf("curse.maven:placebo-283644:5414631")
    compileOnly fg.deobf("curse.maven:patchouli-306770:4966125")
    compileOnly fg.deobf("curse.maven:apothic-attributes-898963:5634071")



    implementation fg.deobf("curse.maven:library-of-exile-398780:5934664")
    implementation fg.deobf("curse.maven:mine-and-slash-reloaded-306575:5939398")
    runtimeOnly fg.deobf("curse.maven:curios-309927:5843594")
    runtimeOnly fg.deobf("curse.maven:playeranimator-658587:4587214")

    compileOnly fg.deobf("curse.maven:legendary-tooltips-532127:4662781")
    runtimeOnly fg.deobf("curse.maven:prism-lib-638111:4650325")
    runtimeOnly fg.deobf("curse.maven:iceberg-520110:5838149")

    compileOnly fg.deobf("curse.maven:obscure-tooltips-715660:4686579")*/

    implementation("me.fzzyhmstrs:fzzy_config:${fzzy_config_version}+neoforge")
    // NEOFORGE
    //implementation 'thedarkcolour:kotlinforforge-neoforge:4.11.0'

    libraries "io.vavr:vavr:0.10.4"
    additionalRuntimeClasspath "io.vavr:vavr:0.10.4"

    implementation ("net.neoforged:bus:${neoforge_eventbus_version}") {
        exclude group: "org.ow2.asm"
        exclude group: "net.jodah"
        exclude group: "org.apache.logging.log4j"
        exclude group: "cpw.mods", module: "modlauncher"
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

//https://gist.github.com/SizableShrimp/949e7c219bfc94487a45226b64ac7749
/*
shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    relocate 'net.neoforged.bus', "${project.group}.relocated.net.neoforged.bus"
    finalizedBy 'jar'
}*/

tasks.named('shadowJar', ShadowJar) {
    archiveClassifier = ''
    configurations = [project.configurations.libraries]
    //relocate 'net.neoforged.bus', "${project.group}.relocated.net.neoforged.bus"
    minimize()
}

assemble.dependsOn shadowJar

publishMods {
    file = tasks.shadowJar.archiveFile
    displayName = file.map { it.asFile.name }
    changelog = file("..\\changelog.md").text.split('\n').collect { string -> {
        if (!string.isBlank()) {
            string + "</br>"
        }
    }}.join('\n')
    type = BETA
    modLoaders.add("neoforge")
    curseforge {
        accessToken = file("D:\\curseforge-key.txt").text
        projectId = "1150640"
        clientRequired = true
        minecraftVersions.add("${minecraft_version}")
    }
}